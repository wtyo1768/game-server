{"version":3,"sources":["webpack:///./src/assets/image/building/windmill-spawn.png","webpack:///./src/assets/image/building/resourceTransfer/resource-transfer-work.png","webpack:///./src/assets/image/building/resourceTransfer/resource-transfer-spawn.png","webpack:///./src/assets/image/planet/blue.png","webpack:///./src/assets/image/building/stonePortal/stone-portal-work.png","webpack:///./src/assets/image/building/windmill-work.png","webpack:///./src/assets/image/building/build-process-1x1.png","webpack:///./src/assets/image/building/powerPlant/power-plant-spawn.png","webpack:///./src/assets/audio/bgm.mp3","webpack:///./src/assets/image/building/greenHouse/green-house-work.png","webpack:///./src/assets/image/planet/planet-1-light.png","webpack:///./src/assets/image/building/wareHouse/warehouse-spawn.png","webpack:///./src/assets/image/building/greenHouse/green-house-spawn.png","webpack:///./src/assets/tile-1.png","webpack:///./src/game/scenes/HumanMainScene.js","webpack:///./src/game/scenes/BootScene.js","webpack:///./src/game/game.js","webpack:///./src/assets/image/building/wareHouse/warehouse-work.png","webpack:///./src/assets/image/background/bg.png","webpack:///./src/assets/image/building/hadesTemple/hades-temple-work.png","webpack:///./src/assets/image/building/powerPlant/power-plant-work.png","webpack:///./src/assets/image/movingObj/car40.png","webpack:///./src/assets/image/building/build-completed-1x1.png","webpack:///./src/assets/image/building/stonePortal/stone-portal-spawn.png"],"names":["module","exports","__webpack_require__","p","scene","pointer","gameFunction","BootScene","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","load","audio","BGM","image","StarRain","bg","Planet","Planet1","PlanetLight","spritesheet","car","frameWidth","frameHeight","tiles","buildProcess1x1","buildCompleted1x1","stonePortal","stonePortaling","windmill","windmilling","powerPlant","startFrame","endFrame","powerPlanting","greenHouse","greenHouseing","resourceTransfer","resourceTransfering","warehouse","warehouseing","hadesTemple","start","Scene","userData","scale","buildingMap","id","name","coordinateX","coordinateY","status","finishTime","directions","southEast","offset","x","y","opposite","northWest","southWest","northEast","anims","drive","speed","HumanMainScene","console","log","GameFunction","buildingGroup","add","group","input","activePointer","w","h","setDisplaySize","setScrollFactor","on","Promise","resolve","then","bind","default","mutations","setBuildingElement","cancelJump","url","plugin","events","fromScene","duration","mapScale","cameras","main","setSize","centerOn","setZoom","setTimeout","zoomInOut","dragScale","plugins","get","drag1Vector","scrollX","zoom","scrollY","scaleFactor","Car","Phaser","Class","Extends","GameObjects","Image","initialize","motion","direction","distance","startX","startY","anim","f","depth","time","delayedCall","changeFrame","delay","frame","texture","resetAnimation","update","Math","Distance","Between","push","existing","setOrigin","buildMap","placeBuildings","forEach","justMoved","midPoint","prevPosition","map","ele","Date","now","createBuilding","launch","newGame","Game","type","AUTO","width","document","body","clientWidth","height","clientHeight","backgroundColor","parent","PlanetScene","PlayScene","d","__webpack_exports__"],"mappings":"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","file":"js/chunk-41a2c06e.1a7794f8.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/windmill-spawn.b8123b04.png\";","module.exports = __webpack_public_path__ + \"img/resource-transfer-work.5befd76a.png\";","module.exports = __webpack_public_path__ + \"img/resource-transfer-spawn.f78490e0.png\";","module.exports = __webpack_public_path__ + \"img/blue.431b99d2.png\";","module.exports = __webpack_public_path__ + \"img/stone-portal-work.b00ccee9.png\";","module.exports = __webpack_public_path__ + \"img/windmill-work.e6921780.png\";","module.exports = __webpack_public_path__ + \"img/build-process-1x1.64933f14.png\";","module.exports = __webpack_public_path__ + \"img/power-plant-spawn.c5de4421.png\";","module.exports = __webpack_public_path__ + \"media/bgm.51d81465.mp3\";","module.exports = __webpack_public_path__ + \"img/green-house-work.414783c3.png\";","module.exports = __webpack_public_path__ + \"img/planet-1-light.0f685b57.png\";","module.exports = __webpack_public_path__ + \"img/warehouse-spawn.e101b33a.png\";","module.exports = __webpack_public_path__ + \"img/green-house-spawn.4943af6f.png\";","module.exports = __webpack_public_path__ + \"img/tile-1.855ebb9a.png\";","/* eslint-disable */\r\nimport { Scene } from 'phaser'\r\nimport { w, h } from '@/game/scenes/PlayScene.js'\r\nimport GameFunction from '@/game/function/buildFunction.js'\r\n\r\nlet scene\r\nlet pointer\r\nlet gameFunction\r\n// let Obj = {}\r\n// Obj.lastTile = null\r\n// Obj.lastCoordinateX = null\r\n// Obj.lastCoordinateY = null\r\nlet car = []\r\nlet userData = {\r\n  scale: 8,\r\n  buildingMap: [\r\n    {\r\n      'id': 'c0',\r\n      'name': 'windmill',\r\n      'coordinateX': 0,\r\n      'coordinateY': 3,\r\n      'status': 'done',\r\n      'finishTime': null\r\n    },\r\n    {\r\n      'id': 'c1',\r\n      'name': 'resourceTransfer',\r\n      'coordinateX': 0,\r\n      'coordinateY': 1,\r\n      'status': 'done',\r\n      'finishTime': null\r\n    },\r\n    {\r\n      'id': 'c5',\r\n      'name': 'warehouse',\r\n      'coordinateX': 1,\r\n      'coordinateY': 1,\r\n      'status': 'done',\r\n      'finishTime': null\r\n    },\r\n    {\r\n      'id': 'c3',\r\n      'name': 'powerPlant',\r\n      'coordinateX': 2,\r\n      'coordinateY': 1,\r\n      'status': 'done',\r\n      'finishTime': null\r\n    },\r\n    {\r\n      'id': 'c6',\r\n      'name': 'hadesTemple',\r\n      'coordinateX': 2,\r\n      'coordinateY': 2,\r\n      'status': 'done',\r\n      'finishTime': null\r\n    }\r\n  ]\r\n}\r\n\r\n// const w = document.body.clientWidth\r\n// const h = document.body.clientHeight\r\nconst directions = {\r\n  southEast: { offset: 0, x: 2, y: 1, opposite: 'northWest' },\r\n  northWest: { offset: 20, x: -2, y: -1, opposite: 'southEast' },\r\n  southWest: { offset: 224, x: -2, y: 1, opposite: 'northEast' },\r\n  northEast: { offset: 96, x: 2, y: -1, opposite: 'southWest' }\r\n}\r\nconst anims = {\r\n  drive: { startFrame: 0, endFrame: 19, speed: 0.02 }\r\n}\r\n\r\nexport default class HumanMainScene extends Scene {\r\n  constructor () {\r\n    super({ key: 'HumanMainScene' })\r\n  }\r\n  init () {\r\n    console.log('HumanMainScene init')\r\n    gameFunction = new GameFunction(this)\r\n\r\n    scene = this\r\n    scene.buildingGroup = this.add.group()\r\n\r\n    // 設定游標\r\n    pointer = scene.input.activePointer\r\n\r\n    // 設定背景\r\n    scene.add.image(w/2, h/2, 'bg').setDisplaySize(2*w, 2*h).setScrollFactor(0)\r\n    \r\n    // 畫面點擊事件\r\n    scene.input.on('pointerdown', function() {\r\n      import('../../store/modules/planet').then(module => {\r\n        module.default.mutations.setBuildingElement(null, false)\r\n      })\r\n      gameFunction.cancelJump()\r\n    })\r\n  }\r\n  preload () {\r\n    let url\r\n    url = 'https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/plugins/dist/rexpinchplugin.min.js'\r\n    this.load.plugin('rexpinchplugin', url, true)\r\n  }\r\n  create () {\r\n    console.log('HumanMainScene create')\r\n    // gameFunction = new GameFunction(this)\r\n    \r\n    scene.events.on('transitioncomplete', function(fromScene, duration){\r\n      let mapScale = userData.scale\r\n      scene.cameras.main.setSize(w, h).centerOn(w/2, h/2+(mapScale-3)*48)\r\n      // gameFunction.initZoomIn()\r\n      scene.cameras.main.setZoom(0.5)\r\n      setTimeout(() => {\r\n        gameFunction.zoomInOut(1, 1000, 'Quart.easeOut')\r\n      }, 250)\r\n    })\r\n\r\n    // scene.game.events.off(\"hidden\", scene.game.onHidden, scene.game, false);\r\n    // scene.game.events.off(\"visible\", scene.game.onVisible, scene.game, false);\r\n\r\n    // pinch\r\n    var dragScale = scene.plugins.get('rexpinchplugin').add(scene);\r\n    dragScale.on('drag1', function (dragScale) {\r\n      var drag1Vector = dragScale.drag1Vector;\r\n      scene.cameras.main.scrollX -= drag1Vector.x / scene.cameras.main.zoom;\r\n      scene.cameras.main.scrollY -= drag1Vector.y / scene.cameras.main.zoom;\r\n    }).on('pinch', function (dragScale) {\r\n      var scaleFactor = dragScale.scaleFactor\r\n      scene.cameras.main.zoom *= scaleFactor\r\n      if(scene.cameras.main.zoom <= 0.5){\r\n        scene.cameras.main.zoom = 0.5\r\n      } else if (scene.cameras.main.zoom >= 2){\r\n        scene.cameras.main.zoom = 2\r\n      }\r\n    }, scene)\r\n\r\n    // moving sprite car\r\n    let Car = new Phaser.Class({\r\n      Extends: Phaser.GameObjects.Image,\r\n      initialize:\r\n      function Car (scene, x, y, motion, direction, distance){\r\n        this.startX = x\r\n        this.startY = y\r\n        this.distance = distance\r\n        this.motion = motion\r\n        this.anim = anims[motion]\r\n        this.direction = directions[direction]\r\n        this.speed = 0.5\r\n        this.f = this.anim.startFrame\r\n\r\n        Phaser.GameObjects.Image.call(this, scene, x, y, 'car', this.direction.offset + this.f)\r\n        this.depth = y + 192\r\n        scene.time.delayedCall(this.anim.speed * 1000, this.changeFrame, [], this)\r\n      },\r\n      changeFrame: function () {\r\n        this.f++\r\n        let delay = this.anim.speed;\r\n        if (this.f === this.anim.endFrame){\r\n          switch (this.motion) {\r\n            case 'drive':\r\n              this.f = this.anim.startFrame\r\n              this.frame = this.texture.get(this.direction.offset + this.f)\r\n              scene.time.delayedCall(delay * 1000, this.changeFrame, [], this)\r\n              break\r\n            default:\r\n              break\r\n          }\r\n        } else {\r\n          this.frame = this.texture.get(this.direction.offset + this.f)\r\n          scene.time.delayedCall(delay * 1000, this.changeFrame, [], this)\r\n        }\r\n      },\r\n      resetAnimation: function () {\r\n        this.f = this.anim.startFrame\r\n        this.frame = this.texture.get(this.direction.offset + this.f)\r\n        scene.time.delayedCall(this.anim.speed * 1000, this.changeFrame, [], this)\r\n      },\r\n      update: function () {\r\n        if ( this.motion === 'drive'){\r\n          this.x += this.direction.x * this.speed\r\n\r\n          if(this.direction.y !== 0){\r\n            this.y += this.direction.y * this.speed\r\n            this.depth = this.y + 192\r\n          }\r\n\r\n          // drive far enough?\r\n          if (Phaser.Math.Distance.Between(this.startX, this.startY, this.x, this.y) >= this.distance){\r\n            this.direction = directions[this.direction.opposite]\r\n            this.f - this.anim.startFrame\r\n            this.frame = this.texture.get(this.direction.offset + this.f)\r\n            this.startX = this.x\r\n            this.startY = this.y\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    car.push(this.add.existing(new Car(this, w/2-96, h/2-96/2-32, 'drive', 'southEast', 150).setOrigin(0.5, 1)))\r\n    car.push(this.add.existing(new Car(this, w/2+1*96-16, h/2+3*96/2-32-8, 'drive', 'northWest', 300).setOrigin(0.5, 1)))\r\n\r\n    gameFunction.buildMap(userData.scale)\r\n \r\n    placeBuildings()\r\n\r\n    // set camera init position\r\n    let mapScale = userData.scale\r\n    scene.cameras.main.setSize(w, h).centerOn(w/2, h/2+(mapScale-3)*48)\r\n    // gameFunction.initZoomIn()\r\n    scene.cameras.main.setZoom(0.5)\r\n    setTimeout(() => {\r\n      gameFunction.zoomInOut(1, 1000, 'Quart.easeOut')\r\n    }, 250)\r\n  }\r\n\r\n  update () {\r\n    car.forEach(function (car) { car.update() })\r\n    \r\n    // drag camera\r\n    // pointer = scene.input.activePointer\r\n    if(pointer.justMoved){\r\n      let x = scene.cameras.main.midPoint.x - pointer.x + pointer.prevPosition.x\r\n      let y = scene.cameras.main.midPoint.y - pointer.y + pointer.prevPosition.y\r\n      scene.cameras.main.centerOn(x, y)\r\n    }\r\n  }\r\n}\r\n\r\n// function getBuildingMap (scale, map) {\r\n//   userData.scale = scale\r\n//   userData.buildingMap = map\r\n// }\r\n\r\nfunction placeBuildings () {\r\n  userData.buildingMap.map(ele => {\r\n    if (ele.status === 'ing') {\r\n      if (ele.finishTime <= Date.now()){\r\n        console.log('ing改completed')\r\n        ele.status = 'completed'\r\n        delete ele.finishTime\r\n      }\r\n    }\r\n\r\n    switch (ele.status) {\r\n      case 'done':\r\n        gameFunction.createBuilding(ele.id, ele, false)\r\n        break\r\n      case 'completed':\r\n        gameFunction.createBuilding('b1', ele, false)\r\n        break\r\n      case 'ing':\r\n        gameFunction.createBuilding('b0', ele, false)\r\n        break\r\n    }\r\n  })\r\n}\r\n\r\n// export { w, h, Obj, userData, gameFunction, getBuildingMap }","/* eslint-disable */\r\nimport { Scene } from 'phaser'\r\n\r\nimport bg from '@/assets/image/background/bg.png'\r\nimport Planet from '@/assets/image/planet/planet-1.png'\r\nimport PlanetLight from '@/assets/image/planet/planet-1-light.png'\r\nimport Planet1 from '@/assets/image/planet/planet-2.png'\r\nimport StarRain from '@/assets/image/planet/blue.png'\r\nimport BGM from '@/assets/audio/bgm.mp3'\r\n\r\nimport car from '@/assets/image/movingObj/car40.png'\r\n\r\nimport tiles from '@/assets/tile-1.png'\r\nimport buildProcess1x1 from '@/assets/image/building/build-process-1x1.png'\r\nimport buildCompleted1x1 from '@/assets/image/building/build-completed-1x1.png'\r\n\r\nimport stonePortal from '@/assets/image/building/stonePortal/stone-portal-spawn.png'\r\nimport stonePortaling from '@/assets/image/building/stonePortal/stone-portal-work.png'\r\nimport windmill from '@/assets/image/building/windmill-spawn.png'\r\nimport windmilling from '@/assets/image/building/windmill-work.png'\r\nimport powerPlant from '@/assets/image/building/powerPlant/power-plant-spawn.png'\r\nimport powerPlanting from '@/assets/image/building/powerPlant/power-plant-work.png'\r\nimport greenHouse from '@/assets/image/building/greenHouse/green-house-spawn.png'\r\nimport greenHouseing from '@/assets/image/building/greenHouse/green-house-work.png'\r\nimport resourceTransfer from '@/assets/image/building/resourceTransfer/resource-transfer-spawn.png'\r\nimport resourceTransfering from '@/assets/image/building/resourceTransfer/resource-transfer-work.png'\r\nimport warehouse from '@/assets/image/building/wareHouse/warehouse-spawn.png'\r\nimport warehouseing from '@/assets/image/building/wareHouse/warehouse-work.png'\r\n\r\nimport hadesTemple from '@/assets/image/building/hadesTemple/hades-temple-work.png'\r\n\r\n\r\nexport default class BootScene extends Scene {\r\n  constructor() {\r\n    super({ key: 'BootScene' })\r\n  }\r\n\r\n  preload() {\r\n    // in planetScene\r\n    this.load.audio('bgm', BGM)\r\n    this.load.image('Star', StarRain)\r\n    this.load.image('bg', bg)\r\n    this.load.image('planet-1', Planet)\r\n    this.load.image('planet-2', Planet1)\r\n    this.load.image('planet-1-light', PlanetLight)\r\n\r\n    this.load.spritesheet('car', car, {frameWidth: 72,frameHeight: 72})\r\n\r\n    // in playScene\r\n    this.load.image('tiles', tiles)\r\n    this.load.spritesheet('buildProcess1x1ing', buildProcess1x1, {frameWidth: 192, frameHeight: 300})\r\n    this.load.spritesheet('buildCompleted1x1ing', buildCompleted1x1, {frameWidth: 192, frameHeight: 300})\r\n\r\n    this.load.spritesheet('stonePortal', stonePortal, {frameWidth: 192,frameHeight: 192})\r\n    this.load.spritesheet('stonePortaling', stonePortaling, {frameWidth: 192,frameHeight: 192})\r\n\r\n    this.load.spritesheet('windmill', windmill, {frameWidth: 192,frameHeight: 220})\r\n    this.load.spritesheet('windmilling', windmilling, {frameWidth: 192,frameHeight: 222.5})\r\n    this.load.spritesheet('powerPlant', powerPlant, {frameWidth: 192,frameHeight: 220, startFrame: 0, endFrame: 22})\r\n    this.load.spritesheet('powerPlanting', powerPlanting, {frameWidth: 192,frameHeight: 220, startFrame: 0, endFrame: 65})\r\n    this.load.spritesheet('greenHouse', greenHouse, {frameWidth: 288,frameHeight: 240})\r\n    this.load.spritesheet('greenHouseing', greenHouseing, {frameWidth: 288,frameHeight: 240})\r\n    this.load.spritesheet('resourceTransfer', resourceTransfer, {frameWidth: 288,frameHeight: 300})\r\n    this.load.spritesheet('resourceTransfering', resourceTransfering, {frameWidth: 288,frameHeight: 300})\r\n    this.load.spritesheet('warehouse', warehouse, {frameWidth: 192, frameHeight: 192})\r\n    this.load.spritesheet('warehouseing', warehouseing, {frameWidth: 192, frameHeight: 192})\r\n\r\n    this.load.image('hadesTemple', hadesTemple)\r\n  }\r\n  create() {\r\n    this.scene.start('PlanetScene')\r\n  }\r\n}\r\n","import Phaser from 'phaser'\r\nimport BootScene from './scenes/BootScene'\r\nimport PlayScene from './scenes/PlayScene'\r\nimport PlanetScene from './scenes/PlanetScene'\r\nimport HumanMainScene from './scenes/HumanMainScene'\r\n\r\nfunction launch () {\r\n  var newGame = new Phaser.Game({\r\n    type: Phaser.AUTO,\r\n    width: document.body.clientWidth,\r\n    height: document.body.clientHeight,\r\n    backgroundColor: '#000000',\r\n    parent: 'game-container',\r\n    scene: [BootScene, PlanetScene, PlayScene, HumanMainScene]\r\n  })\r\n  console.log(newGame)\r\n}\r\n\r\nexport { launch }\r\n","module.exports = __webpack_public_path__ + \"img/warehouse-work.ac212dcb.png\";","module.exports = __webpack_public_path__ + \"img/bg.78b4de10.png\";","module.exports = __webpack_public_path__ + \"img/hades-temple-work.b976bfaf.png\";","module.exports = __webpack_public_path__ + \"img/power-plant-work.71795b25.png\";","module.exports = __webpack_public_path__ + \"img/car40.fcd2ad38.png\";","module.exports = __webpack_public_path__ + \"img/build-completed-1x1.ae05812c.png\";","module.exports = __webpack_public_path__ + \"img/stone-portal-spawn.b1b62221.png\";"],"sourceRoot":""}